#pragma checksum "C:\Users\Serhat Demir\Desktop\Bootcamp\Core_Bootcamp\Areas\Admin\Views\Writer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d7689cded15adb885d11dff128bfcb54335a9bcc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Writer_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Writer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Serhat Demir\Desktop\Bootcamp\Core_Bootcamp\Areas\Admin\_ViewImports.cshtml"
using Core_Bootcamp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Serhat Demir\Desktop\Bootcamp\Core_Bootcamp\Areas\Admin\_ViewImports.cshtml"
using Core_Bootcamp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d7689cded15adb885d11dff128bfcb54335a9bcc", @"/Areas/Admin/Views/Writer/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3f365fb037698328c5339416bf793f3dd1f7f062", @"/Areas/Admin/_ViewImports.cshtml")]
    public class Areas_Admin_Views_Writer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Serhat Demir\Desktop\Bootcamp\Core_Bootcamp\Areas\Admin\Views\Writer\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>Yazar Listesi AJAX İŞLEMLERİ</h1>
<br />
<button type=""button"" id=""btngetlist"" class=""btn btn-outline-primary"">Yazar Listesi</button>
<button type=""button"" id=""btngetbyid"" class=""btn btn-outline-success"">Yazar Getir</button>
<button type=""button"" id=""btnaddwriter"" class=""btn btn-info"">Yazar Ekle</button>
<button type=""button"" id=""btndeletewriter"" class=""btn btn-danger"">Yazar Sil</button>
<button type=""button"" id=""btnupdatewriter"" class=""btn btn-info"">Yazar Güncelle</button>
<br />
<div id=""writerlist"">
    Buraya Yazar Gelecek
</div>

<div id=""writerget"">
    buraya bir yazar gelecek
</div>
<div>
    <input type=""text"" id=""wrid"" placeholder=""yazar id değerini girin"" class=""form-control""/>
    <br />
</div>

<div>
    <p>Yazar Ekleme</p>
    <input type=""text"" class=""form-control"" id=""txtwriterid"" placeholder=""yazar id""/>
    <br />
    <input type=""text"" class=""form-control"" id=""txtwritername"" placeholder=""yazar adı""/>
    <br />

</div>

<div>
    <p>Yazar Silme</p>
    <");
            WriteLiteral(@"input type=""text"" class=""form-control"" id=""txtid"" placeholder=""yazar id"" />
    <br />
</div>


<div>
    <p>Yazar Güncelleme</p>
    <input type=""text"" class=""form-control"" id=""txtupid"" placeholder=""yazar id"" />
    <br />
    <input type=""text"" class=""form-control"" id=""txtupname"" placeholder=""yazar adı"" />
</div>


");
            DefineSection("scripts", async() => {
                WriteLiteral(@" 
<script>

    $(""#btngetlist"").click(function () {
        $.ajax({
            contentType: ""application/json"",
            dataType: ""json"",
            type: ""GET"",
            url: ""/Admin/Writer/WriterList"",
            success: function (func) {
                let w = jQuery.parseJSON(func)
                console.log(w);
                let tablehtml = ""<table class=table table-bordered> <tr><th>Yazar ID</th><th>Yazar Adı</th></tr>"";
                $.each(w, (index, value) => {
                    tablehtml += `<tr><td>${value.id}</td><td>${value.name}</td></tr>`
                });
                tablehtml += ""</table>"";
                $(""#writerlist"").html(tablehtml);

            }
        });
    });


    $(""#btngetbyid"").click(x => {
        let id = $(""#wrid"").val();
        $.ajax({
            contentType: ""application/json"",
            dataType: ""json"",
            type: ""GET"",
            url: ""/Admin/Writer/GetWriterByID/"",
            data: { wrid: id ");
                WriteLiteral(@"},
            success: function (func1) {
                let w = jQuery.parseJSON(func1);
                console.log(w);

                let getValue = `<table class=table table-bordered> <tr><th>Yazar ID</th><th>Yazar Adı</th></tr> <tr><td>${w.id}</td><td>${w.name}</td></tr></table>`
                $(""#writerget"").html(getValue);

            }
        });

    });


    $(""#btnaddwriter"").click(function () {
        let writer = {
            id: $(""#txtwriterid"").val(),
            name: $(""#txtwritername"").val()
        };
        $.ajax({
            type: ""POST"",
            url: ""/Admin/Writer/AddWriter/"",
            data: writer,
            success: function (func) {
                let result = jQuery.parseJSON(func);
                alert(""yazar ekleme işlemi başarılı bir şekilde gerçekleşti"");
            }
        });
    });

    $(""#btndeletewriter"").click(x => {
        let id = $(""#txtid"").val();

        $.ajax({
            url: ""/Admin/Writer/DeleteW");
                WriteLiteral(@"riter/"" + id,
            type: ""POST"",
            dataType: ""json"",
            success: function (func) {
                alert(""yazar silme işlemi başarılı bir şekilde gerçekleşti"");
            }
        });

    });


    $(""#btnupdatewriter"").click(function () {
        let writer = {
            id: $(""#txtupid"").val(),
            name: $(""#txtupname"").val()
        };
        $.ajax({
            type: ""POST"",
            url: ""/Admin/Writer/UpdateWriter"",
            data: writer,
            success: function (func) {
                alert(""Güncelleme işlemi tamamlandı"")
            }
        });
    });

</script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
